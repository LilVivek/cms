<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.briup.cms.mapper.CategoryMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.briup.cms.bean.Category">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="order_num" property="orderNum"/>
        <result column="deleted" property="deleted"/>
        <result column="parent_id" property="parentId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, description, order_num, deleted, parent_id
    </sql>
    <insert id="insertInBatch">
        insert into cms_category (`name`,description,order_num,deleted,parent_id)
        values
        /*相当于Lambda表达式list.forEach(category -> {});*/
        <foreach collection="list" separator="," item="category">/*实体类对象item的属性可以用item.属性名获取*/
            (#{category.name},#{category.description},#{category.orderNum},#{category.deleted},#{category.parentId})
        </foreach>
    </insert>


    <!--    查询所有1级栏目(含2级)-->
    <resultMap id="BaseResultMap2" type="com.briup.cms.bean.Category">
        <id column="c_id" property="id"/>
        <result column="c_name" property="name"/>
        <result column="c_description" property="description"/>
        <result column="c_order_num" property="orderNum"/>
        <result column="c_deleted" property="deleted"/>
        <result column="c_parent_id" property="parentId"/>
    </resultMap>
    <resultMap id="queryAllParentResultMap" type="com.briup.cms.bean.Extend.CategoryExtend"
               extends="BaseResultMap">
        <!--能用嵌套查询的写法一定能用嵌套结果或其他写法 ，这里用外连接写-->
        <collection property="cates" resultMap="BaseResultMap2"/>
    </resultMap>
    <select id="queryAllParent" resultMap="queryAllParentResultMap">
        select c1.id,
               c1.`name`,
               c1.description,
               c1.order_num,
               c1.parent_id,
               c1.deleted,
               c2.id          c_id,
               c2.`name`      c_name,
               c2.description c_description,
               c2.order_num   c_order_num,
               c2.parent_id   c_parent_id,
               c2.deleted
        from cms_category c1
                 LEFT JOIN cms_category c2
                           ON c1.id = c2.parent_id
        where c1.parent_id IS NULL
          and c1.deleted = 0
          AND (c2.deleted IS NULL OR c2.deleted = 0)/*这里c2.deleted 不能写 !=1 因为!=1不包括null 这里要用null来外连接*/
        order by c1.order_num, c2.order_num
    </select>
    <!--查找除了排除逻辑删除的查询-->  <!--resultType和resultMap都是映射到外面接口的返回类型-->
    <select id="selectOneWithoutDeleted" resultType="java.lang.Integer">/*根据SELECT里的列名的数据返回Integer类型的数据*/
        SELECT count(*)
        FROM cms_category
        WHERE name = #{name}
    </select>

</mapper>
